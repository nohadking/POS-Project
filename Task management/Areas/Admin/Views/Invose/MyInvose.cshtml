@model ViewmMODeElMASTER
@{
    ViewData["Title"] = "MyInvose";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@{
    var totalPrice = 0.0m;
}

<div class="page-wrapper">
    <div class="content">
        <form class="flex-fill" method="post" asp-controller="Category" asp-action="Save" enctype="multipart/form-data">
            @* من هنا يبدأ كود التقارير  *@
            <div class="page-header">
                <div class="add-item d-flex">
                    <div class="page-title">
                        <h4>Invoice Report	</h4>
                        <h6>Manage Your Invoice Report</h6>
                    </div>
                </div>
                <ul class="table-top-head">
                    <li class="nav-item nav-item-box">
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="Mail"><img src="~/AdminEn/assets/img/icons/mail.svg" alt="img"></a>                  
                    </li>
                    <li>
                       @* <a asp-area="Admin" asp-controller="Invose" asp-action="GeneratePdf" title="Pdf"><img src="~/AdminEn/assets/img/icons/pdf.svg" alt="img"></a> *@
                        <a onclick="CreatePdf()" title="Pdf" asp-area="Admin" asp-controller="Invose" asp-action="GeneratePdf"><img src="~/AdminEn/assets/img/icons/pdf.svg" alt="img"></a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="Excel"><img src="~/AdminEn/assets/img/icons/excel.svg" alt="img"></a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="Print"><i data-feather="printer" class="feather-rotate-ccw"></i></a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="Refresh"><i data-feather="rotate-ccw" class="feather-rotate-ccw"></i></a>
                    </li>
                    <li>
                        <a data-bs-toggle="tooltip" data-bs-placement="top" title="Collapse" id="collapse-header"><i data-feather="chevron-up" class="feather-chevron-up"></i></a>
                    </li>
                  
                </ul>
            </div>


            <!-- /product list -->
            <div class="card table-list-card">
                <div class="card-body">
                    <div class="table-top">
                        <div class="col-lg-2 col-sm-6 col-12 me-2" dir="rtl">
                            <input readonly value="@totalPrice.ToString()" id="totalPri" class="form-control" />
                        </div>
                        <div class="search-set">
                            <div class="search-input">
                                <a href="" class="btn btn-searchset"><i data-feather="search" class="feather-search"></i></a>
                            </div>
                        </div>
                        <div class="search-path">
                            <div class="d-flex align-items-center">
                                <a class="btn btn-filter" id="filter_search">
                                    <i data-feather="filter" class="filter-icon"></i>
                                    <span><img src="~/AdminEn/assets/img/icons/closes.svg" alt="img"></span>
                                </a>

                            </div>
                        </div>
                        <div class="form-sort"dir="ltr">
                           @*  <i data-feather="sliders" class="info-img"></i> *@
                            <select id="SelectDateEntry" class="form-select" asp-items="@(new SelectList(ViewBag.dateTai))">
                                <option></option>
                            </select>
                        </div>



                    </div>
                    <!-- /Filter -->
                    <div class="card" id="filter_inputs">
                        <div class="card-body pb-0">
                            <div class="row">
                                <div class="col-lg-3 col-sm-6 col-12" dir="ltr">
                                    <div class="input-blocks">
                                        <i data-feather="user" class="info-img"></i>
                                        <select id="CasherName" class="form-select" asp-items="@(new SelectList(ViewBag.CasherName))">
                                            <option value="">اختر مدخل البيانات</option>
                                        </select>
                                        <button type="button" onclick="CreatePdf()" class="btn btn-primary">إنشاء ملف PDF</button>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-6 col-12" dir="ltr">
                                    <div class="input-blocks">
                                        <i data-feather="stop-circle" class="info-img" ></i>
                                        <select id="PayMeth" class="form-select" asp-items="@(new SelectList(ViewBag.PayMoTh))">
                                            <option></option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-6 col-12">
                                    <div class="input-blocks">
                                        <div class="position-relative daterange-wraper">
                                            <input id="DatePeriod" onchange="periodDate()" type="text" class="form-control" name="datetimes" placeholder="From Date - To Date">
                                            <i data-feather="calendar" class="feather-14 info-img"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-sm-6 col-12">
                                    <div class="input-blocks">
                                        <a id="getSearchResult" class="btn btn-filters ms-auto"> <i data-feather="search" class="feather-search"></i> Search </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        @* 	هنا ينتهي  كود الفلتر والتقارير  *@

        <!-- /Filter -->
        <div class="table-responsive">
            <table class="table  datanew">
                <thead>
                    <tr>
                        <th class="no-sort">
                            <label class="checkboxs">
                                <input type="checkbox" id="select-all">
                                <span class="checkmarks"></span>
                            </label>
                        </th>
                        <th>@ResourceWeb.LbInvoiceNo</th>
                        <th>@ResourceWeb.LbDateInvos</th>
                        <th>@ResourceWeb.lbPaymentMethodAr</th>
                        <th>@ResourceWeb.LbName</th>
                        <th>@ResourceWeb.lbProductNameAr</th>
                        <th>@ResourceWeb.LbQuantity</th>
                        <th>@ResourceWeb.LbPrice</th>
                        <th>@ResourceWeb.Lbtotal</th>
                        <th>@ResourceWeb.LbDataEntry</th>
                        <th>@ResourceWeb.LbOutstandingBill</th>
                    </tr>
                </thead>
                <tbody id="TblForResult">

                    @foreach (var item in Model.ListViewInvose)
                    {
                        totalPrice += @item.total;
                        <tr>
                            <td>
                                <label class="checkboxs">
                                    <input type="checkbox">
                                    <span class="checkmarks"></span>
                                </label>
                            </td>
                            <td>N-@item.InvoiceNumber</td>
                            <td>@item.DateInvos</td>
                            <td>@item.PaymentMethodAr</td>
                            <td>@item.Name</td>
                            <td>@item.ProductNameAr</td>
                            <td>@item.Quantity</td>
                            <td>$@item.price</td>
                            <td>$@item.total</td>
                            <td>@item.DataEntry</td>
                            @if (item.OutstandingBill == true)
                            {
                                <td><span class="badge badge-linesuccess">Active</span></td>
                            }
                            else
                            {
                                <td><span class="badge badge-linedanger">DeActive</span></td>
                            }
                        </tr>
                    }


                </tbody>
            </table>
        </div>
    </div>
</div>
<!-- /product list -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/adminen/assets/js/invoicefilter.js"></script>

@* <script>
    $('#SelectDateEntry').on('change', function () {
        console.log("SelectDateEntry changed");
        const originalUrl = window.origin;

        var date = $(this).find("option:selected").val().toString();

        const formattedDate = new Date(date).toISOString().split('T')[0];


        if ($('#filter_inputs').css('display') === 'none') {

            console.log("SelectDateEntry changed and display none");

            fetch(`${originalUrl}/api/Invoice/GetByDateTimeEntry/${formattedDate}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('حدث خطأ في جلب البيانات');
                    }
                    return response.json();
                })
                .then(data => {

                    console.log("data: " + JSON.stringify(data, null, 2));

                    const tbody = $('#TblForResult');
                    tbody.empty();
                    let totalPrice = 0;
                    $('#totalPri').val(0);

                    data.forEach(item => {
                        const row = `
                                <tr>
                                    <td>
                                        <label class="checkboxs">
                                            <input type="checkbox">
                                            <span class="checkmarks"></span>
                                        </label>
                                    </td>
                                    <td>${item.invoiceNumber}</td>
                                    <td>${item.dateInvos}</td>
                                    <td>${item.paymentMethodAr}</td>
                                    <td>${item.name}</td>
                                    <td>${item.productNameAr}</td>
                                    <td>${item.quantity}</td>
                                    <td>$${item.price}</td>
                                    <td>$${item.total}</td>
                                    <td>${item.dataEntry}</td>
                                    <td>
                                        <span class="badge ${item.OutstandingBill ? 'badge-linesuccess' : 'badge-linedanger'}">
                                            ${item.OutstandingBill ? 'Active' : 'DeActive'}
                                        </span>
                                    </td>
                                </tr>`;
                        tbody.append(row);
                        totalPrice += item.total;
                    });

                    $('#totalPri').val(totalPrice.toFixed(2).toString() + ' $').trigger('change');
                })
                .catch(error => {

                    outputElement.textContent = `خطأ: ${error.message}`;
                });

        } else {
            console.log("SelectDateEntry changed and display block");
            const payMeth = $("#PayMeth").find('option:selected').text();
            const cacherName = $('#CasherName').find('option:selected').text();
            fetch(`${originalUrl}/api/Invoice/GetByCasherNameAndPayMethAndDateTimeEntry/${cacherName}/${payMeth}/${formattedDate}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('حدث خطأ في جلب البيانات');
                    }
                    return response.json();
                })
                .then(data => {

                    console.log("data: " + JSON.stringify(data, null, 2));

                    const tbody = $('#TblForResult');
                    tbody.empty();
                    let totalPrice = 0;
                    $('#totalPri').val(0);

                    data.forEach(item => {
                        const row = `
                                <tr>
                                    <td>
                                        <label class="checkboxs">
                                            <input type="checkbox">
                                            <span class="checkmarks"></span>
                                        </label>
                                    </td>
                                    <td>${item.invoiceNumber}</td>
                                    <td>${item.dateInvos}</td>
                                    <td>${item.paymentMethodAr}</td>
                                    <td>${item.name}</td>
                                    <td>${item.productNameAr}</td>
                                    <td>${item.quantity}</td>
                                    <td>$${item.price}</td>
                                    <td>$${item.total}</td>
                                    <td>${item.dataEntry}</td>
                                    <td>
                                        <span class="badge ${item.OutstandingBill ? 'badge-linesuccess' : 'badge-linedanger'}">
                                            ${item.OutstandingBill ? 'Active' : 'DeActive'}
                                        </span>
                                    </td>
                                </tr>`;
                        tbody.append(row);
                        totalPrice += item.total;
                    });

                    $('#totalPri').val(totalPrice.toFixed(2).toString() + ' $').trigger('change');
                })
                .catch(error => {

                    outputElement.textContent = `خطأ: ${error.message}`;
                });

        }

    });

</script>
<script>
    $(function () {
        $('#DatePeriod').daterangepicker({
            locale: {
                format: 'YYYY-MM-DD' // تنسيق التاريخ
            }
        });
    });
    $('#DatePeriod').on('apply.daterangepicker', function (ev, picker) {
        var fromDate = picker.startDate.format('YYYY-MM-DD');
        var toDate = picker.endDate.format('YYYY-MM-DD');

        console.log("From Date:", fromDate);
        console.log("To Date:", toDate);
    });

</script>

<script>

    function periodDate() {
        if ($('#filter_inputs').css('display') === 'none') return;

        const datePeriod = $('#DatePeriod').val(); // قراءة التاريخ من الحقل
        const dates = datePeriod.split(" - "); // تقسيم التواريخ بناءً على الفاصل " - "

        if (!datePeriod || dates.length !== 2) {
            console.error("التواريخ المدخلة غير صحيحة.");
            return;
        }

        // استخراج تاريخ البداية والنهاية
        const startDateString = dates[0].trim(); // تاريخ البداية
        const endDateString = dates[1].trim();   // تاريخ النهاية

        // تحويل النصوص إلى كائنات تاريخ
        const startDate = new Date(startDateString);
        const endDate = new Date(endDateString);

        if (isNaN(startDate) || isNaN(endDate)) {
            console.error("التواريخ غير صالحة. تأكد من تنسيق الإدخال.");
            return;
        }

        // تنسيق التواريخ للإخراج
        const formattedDateStart = `${startDate.getFullYear()}-${(startDate.getMonth() + 1).toString().padStart(2, '0')}-${startDate.getDate().toString().padStart(2, '0')}`;
        const formattedDateEnd = `${endDate.getFullYear()}-${(endDate.getMonth() + 1).toString().padStart(2, '0')}-${endDate.getDate().toString().padStart(2, '0')}`;

        console.log("تاريخ البدء: " + formattedDateStart);
        console.log("تاريخ النهاية: " + formattedDateEnd);

        const payMeth = $('#PayMeth').find('option:selected').text();
        const cacherName = $("#CasherName").find('option:selected').text();

        if (!payMeth || !cacherName) {
            console.error("طريقة الدفع أو اسم الكاشير غير محددين.");
            return;
        }

        const originalUrl = window.origin;

        // استدعاء API باستخدام التواريخ المدخلة
        fetch(`${originalUrl}/api/Invoice/GetByCasherNameAndPayMethodAndPeriodDate/${cacherName}/${payMeth}/${formattedDateStart}/${formattedDateEnd}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('حدث خطأ في جلب البيانات');
                }
                return response.json();
            })
            .then(data => {
                console.log("data: " + JSON.stringify(data, null, 2));

                const tbody = $('#TblForResult');
                tbody.empty();
                let totalPrice = 0;
                $('#totalPri').val(0);

                data.forEach(item => {
                    const row = `
                        <tr>
                            <td>
                                <label class="checkboxs">
                                    <input type="checkbox">
                                    <span class="checkmarks"></span>
                                </label>
                            </td>
                            <td>${item.invoiceNumber}</td>
                            <td>${item.dateInvos}</td>
                            <td>${item.paymentMethodAr}</td>
                            <td>${item.name}</td>
                            <td>${item.productNameAr}</td>
                            <td>${item.quantity}</td>
                            <td>$${item.price}</td>
                            <td>$${item.total}</td>
                            <td>${item.dataEntry}</td>
                            <td>
                                <span class="badge ${item.OutstandingBill ? 'badge-linesuccess' : 'badge-linedanger'}">
                                    ${item.OutstandingBill ? 'Active' : 'DeActive'}
                                </span>
                            </td>
                        </tr>`;
                    tbody.append(row);
                    totalPrice += item.total;
                });
                $('#totalPri').val(totalPrice.toFixed(2) + ' $').trigger('change');
            })
            .catch(error => {
                const outputElement = document.getElementById('outputElement');
                if (outputElement) {
                    outputElement.textContent = `خطأ: ${error.message}`;
                }
            });
    }



</script> *@

@* <script>
    function CreatePdf() {
        const cacherName = document.querySelector('#CasherName').value;
        const payMethod = document.querySelector('#PayMeth').value; 
        const detectedPeriod = document.querySelector('#DatePeriod').value;
        const searchWord = document.querySelector('.form-control.form-control-sm').value;
        const oneDate = document.querySelector('#SelectDateEntry').value;

        if (
            (!oneDate || oneDate === "") &&
            (!searchWord || searchWord === "") &&
            (!cacherName || cacherName === "") &&
            (!payMethod || payMethod === "")
        ) {
            console.log("GeneratePdf");
            fetch(`/GeneratePdf`);
        }



        else if (searchWord) {
            console.log("searchWord");
            fetch(`/GeneratePdfByKeywordSearch/${searchWord}`);
        }

        else if (oneDate) {
            console.log("oneDate");
            const formattedDate = new Date(oneDate).toISOString().split('T')[0];
            fetch(`/GeneratePdfByOneDate/${formattedDate}`);
        }

        else if (cacherName && (!payMethod || payMethod === "")) {
            console.log("GeneratePdfByCacherName");
            fetch(`/GeneratePdfByCacherName/${cacherName}`);

        }

        else if (cacherName && payMethod){
            console.log("GeneratePdfByCacherNameAndPayMethod");
            fetch(`/GeneratePdfByCacherNameAndPayMethod/${cacherName}/${payMethod}`);

        }
         
        console.log("cacherName: " + cacherName);
        console.log("payMethod: " + payMethod);
        console.log("detectedPeriod: " + detectedPeriod);
        console.log("searchWord: " + searchWord);
        console.log("oneDate: " + oneDate);
    }

</script> *@














<script>
    function CreatePdf() {
        // جلب القيمة المحددة من القائمة المنسدلة
        var selectedDate = document.getElementById("CasherName").value;
        console.log(selectedDate+"nnnn");
        if (!selectedDate) {
            alert("يرج اختيار منشء السندPDF.");
            return;
        }

        // إعادة توجيه إلى الإجراء مع تمرير القيمة كمعلمة
        var url = `/Admin/Invose/GeneratePdf?selectedDate=${encodeURIComponent(selectedDate)}`;
        window.location.href = url;
    }
</script>

